/**
 * 自己实现线程池.<br/>
 * 1. 使用线程池的背景:
 * <p>
 *     线程分为 T1创建时间,T2执行时间,T3销毁时间(run结束后,自动GC销毁)<br/>
 *     当T1 + T3 > T2, 则可采用线程池,以减少创建/销毁带来的额外开销(cpu,内存等).
 * </p>
 *
 * 2. 组成部分
 * <p>
 *     a.线程管理器(ThreadPool): 用于创建并管理线程池,包括 创建线程池/销毁线程池/添加任务等.
 *     b.工作线程(WorkThread): 线程池中的线程,没有任务时,处于等待状态,可以循环执行任务,该线程必须处于活动状态,以防止被结束,其他的<br/>
 *     比如 数据库连接/ http连接 也是一样的原理.
 *     c. 任务接口(Task): 供工作线程调用,业务代码的具体实现的地方.<br/>
 *     d. 任务队列(queue): 用于存放没有处理的认为,提供一种缓存机制.
 * </p>
 * 3. 原理:
 * <p>
 *     重复利用线程,没有任务时阻塞,不断循环地去拿任务.
 * </p>
 *
 *
 * Created by Li.Xiaochuan on 17/8/11.
 */
package com.desmond.codebase.thread.pool.custom;